name: Build

on: [push, pull_request]

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Set up QEMU
        if: runner.os== 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # - name: Create build directory
      #   run:  |
      #     mkdir build && cd build && mkdir docs && cd ..

      # - name: Install Doxygen
      #   # uses: ssciwr/doxygen-install@v1
      #   uses: mattnotmitt/doxygen-action@v1.9.5
      #   with:
      #     doxyfile-path: 'docs/source/Doxyfile.in'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_SKIP: pp*
          CIBW_ARCHS_LINUX: auto aarch64
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
